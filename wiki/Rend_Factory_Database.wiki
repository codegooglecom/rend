#summary Documentation of the Rend_Factory_Database class
#labels Factories,Phase-Implementation

= Description =
This class is an [http://en.wikipedia.org/wiki/Abstract_factory_pattern Abstract Factory] for the [http://framework.zend.com/manual/en/zend.db.html#zend.db.adapter Zend_Db_Adapters].

= API =
|| *Method* || *Description* ||
|| __construct() || A !Zend_Config object or array matching the setter names ||
|| create() || Create an instance of a [http://framework.zend.com/manual/en/zend.db.html#zend.db.adapter Zend_Db_Adapter] class ||
|| setAdapter() || Any valid !Zend_Db [http://framework.zend.com/manual/en/zend.db.html#zend.db.adapter adapter] ||
|| setParams() || Any valid !Zend_Db [http://framework.zend.com/manual/en/zend.db.html#zend.db.adapter.connecting.parameters parameter] ||

= Examples =
== Standard ==
Standard usage of the !Rend_Factory_Database is to create an instance of the factory and call it's create() method on demand.

!MyController.php
{{{
class MyController extends Rend_Controller_Action {
    protected $_databaseFactory;
    public function init() {
        $this->_dbFactory = new Rend_Factory_Database(array(
            'adapter' => 'pdo_mysql',
            'params'  => array(
                'host'     => 'localhost',
                'username' => 'test',
                'password' => 'test',
                'dbname' => 'database'
            )
        );
    }
    public function myAction() {
        $database = $this->_dbFactory->create();
    }
}
}}}

== Custom Factories ==
You can easily create your own abstract factory for creating [http://framework.zend.com/manual/en/zend.db.html#zend.db.adapter Zend_Db_Adapters] by extending the Rend_Factory_Database_Interface

!MyDbFactory.php
{{{
class MyDbFactory implements Rend_Factory_Database_Interface {
    public function create() {
        // return an instance of your factory
    }
}
}}}
!MyController.php
{{{
class MyController extends Rend_Controller_Action {
    public function init() {
        $this->_dbFactory = new MyDbFactory();
    }
    public function myAction() {
        $database = $this->_dbFactory->create();
    }
}
}}}

== Rend_FactoryLoader ==
The Rend_FactoryLoader uses a number of conventions to make configuration of objects seamless.

config.ini
{{{
factories.database.adapter  = pdo_mysql
factories.database.host     = localhost
factories.database.username = username
factories.database.password = password
factories.database.dbname   = database
}}}

!MyController.php
{{{
class MyController extends Rend_Controller_Action {
    public function myAction() {
        $database = $this->_factory->database;
    }
}
}}}